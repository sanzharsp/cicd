# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5425:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: djangos
          password: SanzharSapar0207

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: docker build -t testdocker ./testdocker

      - name: Push Docker image to Docker Hub
        run: |
          docker tag testdocker djangos/testdocker:latest
          docker push djangos/testdocker:latest

#      - name: Deploy to server
#        env:
#          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#          SERVER: ${{ secrets.SERVER }}
#        run: |
#          echo "${SSH_PRIVATE_KEY}" > private_key
#          chmod 600 private_key
#          scp -i private_key docker-compose.yml ${{ secrets.SERVER }}:~/app/
#          ssh -i private_key ${{ secrets.SERVER }} << 'EOF'
#            cd ~/app/
#            docker-compose pull
#            docker-compose up -d
#            rm private_key
#          EOF
